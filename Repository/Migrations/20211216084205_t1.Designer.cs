// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(MasterDbContext))]
    [Migration("20211216084205_t1")]
    partial class t1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entitys.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Index")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Code = "admin",
                            Index = 0L,
                            IsDeleted = false,
                            Name = "管理员",
                            Remark = "超级牛皮的权限管理员"
                        });
                });

            modelBuilder.Entity("Core.Entitys.Roles.RoleFunction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("RoleFunction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50cf6bf9-ef1d-4ad0-b5c0-6215c58df9ed"),
                            Index = 0,
                            IsDeleted = false,
                            ParentId = new Guid("2e742937-20fd-468a-a68c-591daf19e607"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Get/GetPathAll",
                            Title = "获取所有接口"
                        },
                        new
                        {
                            Id = new Guid("2e742937-20fd-468a-a68c-591daf19e607"),
                            Index = 0,
                            IsDeleted = false,
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Get",
                            Title = "获取所有接口"
                        },
                        new
                        {
                            Id = new Guid("9e90e539-5974-4999-9cb3-e5e2603d0d89"),
                            Index = 0,
                            IsDeleted = false,
                            ParentId = new Guid("31b6c114-f57c-4e70-b598-c6ec975cf708"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Login/Login",
                            Title = "登录模块"
                        },
                        new
                        {
                            Id = new Guid("b17d7991-e6a6-4717-a434-354c984efe9c"),
                            Index = 1,
                            IsDeleted = false,
                            ParentId = new Guid("31b6c114-f57c-4e70-b598-c6ec975cf708"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Login/ExitLogin",
                            Title = "登录模块"
                        },
                        new
                        {
                            Id = new Guid("4d146c9a-7c3d-4ce9-909c-520ac1efae68"),
                            Index = 2,
                            IsDeleted = false,
                            ParentId = new Guid("31b6c114-f57c-4e70-b598-c6ec975cf708"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Login/Refresh",
                            Title = "登录模块"
                        },
                        new
                        {
                            Id = new Guid("31b6c114-f57c-4e70-b598-c6ec975cf708"),
                            Index = 1,
                            IsDeleted = false,
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Login",
                            Title = "登录模块"
                        },
                        new
                        {
                            Id = new Guid("52587097-fec2-435e-88bd-c8c090f70c41"),
                            Index = 0,
                            IsDeleted = false,
                            ParentId = new Guid("950a5bb3-55ee-4770-860c-1e4b34cfcdb3"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/User/CreateUser",
                            Title = "用户模块"
                        },
                        new
                        {
                            Id = new Guid("3786f975-5a06-4066-b4c0-2a746ce75194"),
                            Index = 1,
                            IsDeleted = false,
                            ParentId = new Guid("950a5bb3-55ee-4770-860c-1e4b34cfcdb3"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/User/GetAllUsers",
                            Title = "用户模块"
                        },
                        new
                        {
                            Id = new Guid("950a5bb3-55ee-4770-860c-1e4b34cfcdb3"),
                            Index = 2,
                            IsDeleted = false,
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/User",
                            Title = "用户模块"
                        },
                        new
                        {
                            Id = new Guid("adc3bbdc-85e8-4cff-8b09-c33e0aa57974"),
                            Index = 0,
                            IsDeleted = false,
                            ParentId = new Guid("402ff1a4-7fb8-4597-8013-5b907b3981a9"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Files/UploadFiles",
                            Title = "文件模块"
                        },
                        new
                        {
                            Id = new Guid("6b974101-eae9-4da7-b251-e7ef65cdf4d0"),
                            Index = 1,
                            IsDeleted = false,
                            ParentId = new Guid("402ff1a4-7fb8-4597-8013-5b907b3981a9"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Files/DeleteFile",
                            Title = "文件模块"
                        },
                        new
                        {
                            Id = new Guid("2e3dae23-8e63-4f1c-9b77-b14b0c84b32b"),
                            Index = 2,
                            IsDeleted = false,
                            ParentId = new Guid("402ff1a4-7fb8-4597-8013-5b907b3981a9"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Files/DeletesFile",
                            Title = "文件模块"
                        },
                        new
                        {
                            Id = new Guid("e55d3f23-b412-41b4-8d33-d480db838202"),
                            Index = 3,
                            IsDeleted = false,
                            ParentId = new Guid("402ff1a4-7fb8-4597-8013-5b907b3981a9"),
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Files/GetFileNames",
                            Title = "文件模块"
                        },
                        new
                        {
                            Id = new Guid("402ff1a4-7fb8-4597-8013-5b907b3981a9"),
                            Index = 3,
                            IsDeleted = false,
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            Route = "/api/Files",
                            Title = "文件模块"
                        });
                });

            modelBuilder.Entity("Core.Entitys.Roles.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a685a746-eb3f-4286-a105-a88559de6712"),
                            IsDeleted = false,
                            RoleId = new Guid("29539ae5-8fc2-41c0-b6f2-7e579b958139"),
                            UserId = new Guid("59bfe729-4bfb-45d2-9ba5-956dd7d3b73b")
                        });
                });

            modelBuilder.Entity("Core.Entitys.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreezeTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("59bfe729-4bfb-45d2-9ba5-956dd7d3b73b"),
                            AccountCode = "admin",
                            ContactWay = "239573049@qq.com",
                            HeadPortrait = "https://ts1.cn.mm.bing.net/th?id=OIP-C.79smi7hB-2AHPbroJr8rnwAAAA&w=204&h=204&c=8&rs=1&qlt=90&o=6&pid=3.1&rm=2",
                            IsDeleted = false,
                            Name = "管理员",
                            Password = "9716DADA3B1D9F12524528D33419BE62",
                            Power = 0,
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
